// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  output        = "../generated/prisma"
  binaryTargets = ["native", "debian-openssl-3.0.x", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "mongodb"
  url      = env("API_DATABASE_URL")
}

model Test {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String

  @@map("tests")
}

/**
 * Rooms
 * This model is used to store the rooms that are currently in the game.
 * It is used to store the users that are in the room, the rounds that are in the room, and the status of the room.
 * Rooms can be cleaned up if:
 * - status == finished and createdAt > (x1) time
 * - endedAt > (x2) time
 * - status == waiting_host and createdAt > (x3) time
 */
model Room {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  users     RoomUser[]
  rounds    RoomRound[]
  status    RoomStatus  @default(waiting_host)
  // Settings
  maxRounds Int @default(10)
  maxUsers  Int @default(4)
  // Metadata
  createdAt DateTime    @default(now())
  endedAt   DateTime? // Based on last user to leave the room

  @@map("grt_rooms")
}

type RoomRound {
  answer    String
  duration  Int
  startTime DateTime
  endTime   DateTime
}

enum RoomStatus {
  waiting_host // Waiting for the host to join the game
  waiting      // Waiting for players to join the game
  playing      // Game is in progress
  finished     // Game is finished
}

model RoomUser {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  score   Int
  isHost  Boolean
  roomId  String @db.ObjectId
  room    Room  @relation(fields: [roomId], references: [id])
  
  // Users have to send this JWT every actions for authentication themselves
  // This field used only to logs, DO NOT look up this for authentication
  identifierToken String

  @@map("grt_room_users")
}
